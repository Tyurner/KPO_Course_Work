@model List<SuccessfulAdmission.DataLogic.Models.SubjectModel>

<div class="text-center">
    <h1 class="display-4">Предметы</h1>
</div>
@if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
{
<script>
    alert('@Html.Raw(System.Web.HttpUtility.JavaScriptStringEncode(TempData["ErrorMessage"].ToString()))');
</script>
}
<div class="text-center">
    <p>
        <a asp-action="SubjectCreate">Добавить предмет</a>
    </p>
    <div class="text-center mb-2">
        <input type="text" id="searchInput" class="form-control d-inline-block" style="width: 50%;" placeholder="Поиск по названию" />
        <button class="btn btn-primary" onclick="searchSubjects()">Найти</button>
    </div>
    <table id="subjectTable" class="table">
        <thead>
        <tr>
            <th class="text-info" onclick="sortTable(0)">
                Название предмета
            </th>
            <th class="text-info" onclick="sortTable(1)">
                Максимум баллов
            </th>
            <th>
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaxPoints)
                </td>
                <td>
                    <a href="@Url.Action("SubjectSetting", "Home", new { id = item.Id })"
                       class="btn btn-primary btn-lg">Редактировать</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<script>
function sortTable(columnIndex) {
    const table = document.getElementById("subjectTable");
    const rows = Array.from(table.rows).slice(1); // Извлекаем строки, пропуская заголовок
    const isAscending = table.dataset.sortOrder === "asc";
    // Сортируем строки
    rows.sort((a, b) => {
        const aText = a.cells[columnIndex].innerText;
        const bText = b.cells[columnIndex].innerText;
        // Преобразуем текст в число, если это сумма баллов
        const aValue = columnIndex === (rows[0][1]) ? parseInt(aText) : aText;
        const bValue = columnIndex === (rows[0][1]) ? parseInt(bText) : bText;
        return isAscending ? (aValue > bValue ? 1 : -1) : (aValue < bValue ? 1 : -1);
    });
    // Убираем текущие строки из таблицы
    rows.forEach(row => table.appendChild(row)); // Перемещаем строки, чтобы обновить порядок
    // Переключаем порядок сортировки
    table.dataset.sortOrder = isAscending ? "desc" : "asc";
    // Принудительная перерисовка стилей
    rows.forEach(row => row.classList.remove('sorted')); // Если есть класс для сортировки, убираем его
    rows.forEach((row, index) => {
        row.classList.add(index % 2 === 0 ? 'sorted-even' : 'sorted-odd'); // Применяем классы для четных и нечетных строк
    });
}
function searchSubjects() {
    let searchQuery = document.getElementById("searchInput").value.toLowerCase();
    let allRows = document.querySelectorAll("#subjectTable tbody tr");

    allRows.forEach(row => {
        let name = row.querySelector("td").textContent.toLowerCase();
        if (name.includes(searchQuery)) {
            row.style.display = "";
        } else {
            row.style.display = "none";
        }
    });
}
</script>